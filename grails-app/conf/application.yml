---
grails:
    profile: web
    codegen:
        defaultPackage: com.adzdata.tweetsky
    gorm:
        reactor:
            # Whether to translate GORM events into Reactor events
            # Disabled by default for performance reasons
            events: false
info:
    app:
        name: '@info.app.name@'
        version: '@info.app.version@'
        grailsVersion: '@info.app.grailsVersion@'
spring:
    main:
        banner-mode: "off"
    groovy:
        template:
            check-template-location: false

# Spring Actuator Endpoints are Disabled by Default
endpoints:
    enabled: false
    jmx:
        enabled: true

---
grails:
    mime:
        disable:
            accept:
                header:
                    userAgents:
                        - Gecko
                        - WebKit
                        - Presto
                        - Trident
        types:
            all: '*/*'
            atom: application/atom+xml
            css: text/css
            csv: text/csv
            form: application/x-www-form-urlencoded
            html:
              - text/html
              - application/xhtml+xml
            js: text/javascript
            json:
              - application/json
              - text/json
            multipartForm: multipart/form-data
            pdf: application/pdf
            rss: application/rss+xml
            text: text/plain
            hal:
              - application/hal+json
              - application/hal+xml
            xml:
              - text/xml
              - application/xml
    urlmapping:
        cache:
            maxsize: 1000
    controllers:
        defaultScope: singleton
    converters:
        encoding: UTF-8
    views:
        default:
            codec: html
        gsp:
            encoding: UTF-8
            htmlcodec: xml
            codecs:
                expression: html
                scriptlets: html
                taglib: none
                staticparts: none
endpoints:
    jmx:
        unique-names: true

---
hibernate:
    cache:
        queries: false
        use_second_level_cache: false
        use_query_cache: false
dataSource:
    pooled: true
    jmxExport: true
    driverClassName: org.postgresql.Driver
    dbCreate: update
    username: 'pradip'
    password: 'toor'

environments:
    development:
        dataSource:
            username: 'pradip'
            password: 'toor'
            url: jdbc:postgresql://localhost:5432/tweetsky?useUnicode=yes&characterEncoding=UTF-8
    test:
        dataSource:
            dbCreate: update
            url: jdbc:h2:mem:testDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
    production:
        dataSource:
            dbCreate: update
            username: 'postgres'
            password: 'toor'
            url: jdbc:postgresql://localhost:5432/tweetsky_prod?useUnicode=yes&characterEncoding=UTF-8
            properties:
                jmxEnabled: true
                initialSize: 5
                maxActive: 50
                minIdle: 5
                maxIdle: 25
                maxWait: 10000
                maxAge: 600000
                timeBetweenEvictionRunsMillis: 5000
                minEvictableIdleTimeMillis: 60000
                validationQuery: SELECT 1
                validationQueryTimeout: 3
                validationInterval: 15000
                testOnBorrow: true
                testWhileIdle: true
                testOnReturn: false
                jdbcInterceptors: ConnectionState
                defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED

---
grails:
    controllers:
        upload:
            maxFileSize: 39214400
            maxRequestSize: 29214400

---
grails:
    serverURL: http://127.0.0.1:8080

---
server:
    port: 8080
---
grails:
    mail:
        host: "smtp.gmail.com"
        port: 465
        username: "test@gmail.com"
        password: "test"
        props:
            mail.smtp.auth: "true"
            mail.smtp.socketFactory.port: "465"
            mail.smtp.socketFactory.class: "javax.net.ssl.SSLSocketFactory"
            mail.smtp.socketFactory.fallback: "false"

---
twitter:
    credentials:
        api_key: "bylyumOw6LIStVLaleEmQCcbF" #This is essentially a username, and allows you to make a request on behalf of your App.
        api_key_secret: "fmSoxhBYQBixCG5IFgqgpFicCAgCuMpWVLY2s9JRjaO1aFWjaq" #This is a password, and allows you to make a request on behalf of your App
        access_token: "1393235201799585798-iFarDcMNuGT5piJYGyGUvWbXGf7MOo" #This token represents the Twitter account that owns the App, and allows you to make a request on behalf of that Twitter account
        access_token_secret: "4jWYHbLs4UlRhx2JKurCdjWKw5DnCh4WQqvlTACkulNoJ" #This token also represents the Twitter account that owns the App, and allows you to make a request on behalf of that Twitter account
        bearer_token: "AAAAAAAAAAAAAAAAAAAAAEG2PgEAAAAACgEhopVa8A0vjdGIy1Lgn7pyMEg%3D0nWDVFIyBS34ogMEcoJ8c9FJNq9zdch3iQUA7dtSzqpd3REqhq" #This token represents your App and enables you to authenticate requests that require OAuth 2.0 Bearer Token authentication
